module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Point_1 = require(\"../elements/primitives/Point\");\r\nvar NoiseGenerator = (function () {\r\n    function NoiseGenerator(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.history = [];\r\n    }\r\n    NoiseGenerator.prototype.draw = function (drawingManager) {\r\n        for (var i = 0; i < this.width; i++) {\r\n            for (var j = 0; j < this.height; j++) {\r\n                if (this.weighting(i, j) > Math.random()) {\r\n                    drawingManager.drawLine(new Point_1.Point(i, j), new Point_1.Point(i, j));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    NoiseGenerator.prototype.weighting = function (x, y) {\r\n        function computeWeight(value, center) {\r\n            var diff = (value - center + 1);\r\n            return 1 / (diff * diff);\r\n        }\r\n        var centerX = computeWeight(x, this.width);\r\n        var centerY = computeWeight(y, this.height);\r\n        var averageWeight = (centerX + centerY / 2);\r\n        return averageWeight;\r\n    };\r\n    NoiseGenerator.prototype.erase = function (drawingManager) { };\r\n    return NoiseGenerator;\r\n}());\r\nexports.NoiseGenerator = NoiseGenerator;\r\n//# sourceMappingURL=NoiseGenerator.js.map",
dependencies: ["../elements/primitives/Point"],
sourceMap: "{\"version\":3,\"file\":\"noise/NoiseGenerator.js\",\"sourceRoot\":\"\",\"sources\":[\"/src/noise/NoiseGenerator.ts\"],\"names\":[],\"mappings\":\";;AAEA,sDAAmD;AAEnD;IAIE,wBAAY,KAAK,EAAE,MAAM;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,6BAAI,GAAJ,UAAK,cAA6B;QAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;YACpC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACzC,cAAc,CAAC,QAAQ,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,kCAAS,GAAT,UAAU,CAAS,EAAE,CAAS;QAC5B,uBAAuB,KAAa,EAAE,MAAc;YAClD,IAAM,IAAI,GAAG,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QAC3B,CAAC;QACD,IAAM,OAAO,GAAG,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAM,OAAO,GAAG,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9C,IAAM,aAAa,GAAG,CAAC,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAED,8BAAK,GAAL,UAAM,cAA6B,IAAS,CAAC;IAC/C,qBAAC;AAAD,CAAC,AAjCD,IAiCC;AAjCY,wCAAc\",\"sourcesContent\":[\"import {DrawingCanvas} from '../drawing/DrawingCanvas';\\nimport {Drawable} from '../elements/Drawable';\\nimport {Point} from '../elements/primitives/Point';\\n\\nexport class NoiseGenerator implements Drawable {\\n  width: number;\\n  height: number;\\n  history: number[];\\n  constructor(width, height) {\\n    this.width = width;\\n    this.height = height;\\n    this.history = [];\\n  }\\n\\n  draw(drawingManager: DrawingCanvas): void {\\n    for (var i = 0; i < this.width; i++) {\\n      for (var j = 0; j < this.height; j++) {\\n        if (this.weighting(i, j) > Math.random()) {\\n          drawingManager.drawLine(new Point(i, j), new Point(i, j));\\n        }\\n      }\\n    }\\n  }\\n\\n  weighting(x: number, y: number) {\\n    function computeWeight(value: number, center: number) {\\n      const diff = (value - center + 1);\\n      return 1 / (diff * diff);\\n    }\\n    const centerX = computeWeight(x, this.width);\\n    const centerY = computeWeight(y, this.height);\\n\\n    const averageWeight = (centerX + centerY / 2);\\n    return averageWeight;\\n  }\\n\\n  erase(drawingManager: DrawingCanvas): void {}\\n}\"]}",
headerContent: undefined,
mtime: 1522901729244,
devLibsRequired : undefined,
_ : {}
}
